#!/bin/bash

cleanup() {
  echo "Cleanup backup older than $CLEANUP_OLDER_THAN days"
  toberemove=$(find /backups/ -type f -not -name ".*" -mtime +$CLEANUP_OLDER_THAN | wc -l)
  echo "Will try to remove $toberemove files"
  find /backups/ -type f -not -name ".*" -mtime +$CLEANUP_OLDER_THAN -exec rm {} \;
}

if [ -z "$MYSQL_ENV_MYSQL_USER" ]; then echo "Error: MYSQL_ENV_MYSQL_USER not set"; echo "Finished: FAILURE"; exit 1; fi
if [ -z "$MYSQL_ENV_MYSQL_DATABASE" ]; then echo "Error: MYSQL_ENV_MYSQL_DATABASE not set"; echo "Finished: FAILURE"; exit 1; fi
if [ -z "$MYSQL_ENV_MYSQL_PASSWORD" ]; then echo "Error: MYSQL_ENV_MYSQL_PASSWORD not set"; echo "Finished: FAILURE"; exit 1; fi

if [ -n "$CLEANUP_OLDER_THAN" ]; then cleanup;  fi

echo 'creating database dump'
mysqldump -h mysql --add-drop-table -u$MYSQL_ENV_MYSQL_USER -p $MYSQL_ENV_MYSQL_DATABASE --password=$MYSQL_ENV_MYSQL_PASSWORD | bzip2 -c > /backups/backup_`date '+%Y%m%d_%H%M'`.sql.bz2

if [ -n "$AWS_ACCESS_KEY_ID" ] && [ -n "$AWS_SECRET_ACCESS_KEY" ] && [ -n "$AWS_DEFAULT_REGION" ] && [ -n "$AWS_BUCKET_NAME" ];
then
  echo 'uploading to AWS';
  find /backups/ -type f -not -name ".*" -mtime -1 -exec aws s3 cp {} s3://$AWS_BUCKET_NAME \;
fi

find /backups/ -type f -not -name ".*" -mtime -1 -exec aws s3 cp {} s3://$AWS_BUCKET_NAME \;


echo 'Finished: SUCCESS'
